<?xml version='1.0' encoding="ISO-8859-1"?>
<example>
    <title>Code listing: creating custom methods and callbacks</title>
    <programlisting><![CDATA[<?php

    class user extends YDDatabaseObject {

        function user() {

            // Initializes the parent class
            $this->YDDatabaseObject();

            // Register the database connection
            $this->registerDatabase(
                YDDatabase::getInstance( 'mysql', 'database', 'user', 'pass', 'host' )
            );

            // Register the table name
            $this->registerTable( 'users' );

            // Register the keys
            // The second argument defines id as an auto-increment field
            $this->registerKey( 'id', true );

            // Register the fields
            $this->registerField( 'name' );
            $this->registerField( 'email' );

            // Add a field with a callback
            $birthday = & $this->registerField( 'birthday' );
            $birthday->setCallback( 'getAge' );
            
            // Register callbacks
            $this->registerCallback( 'debug', 'insert' ); // after insert

        }

        function getAge( $birthday ) {

            // When the birthday receives no value, the variable age is deleted
            if ( ! $birthday ) {
                @unset( $this->age );
                return;
            }

            // Get the birthday year
            $year = substr( $birthday, 0, 4 );

            // Not really correct, but just to get the idea
            // We can set a new object variable called "age"
            // This variable will not be included in following
            // SELECTs, INSERTs or UPDATEs as it is not a registered field
            $this->set( 'age', date('Y') - $year );

        }
        
        // Action callback
        function debug( $action, $before ) {
            
            YDDebugUtil::debug( 'This was generated by the callback "debug" ' .
                                ( $before ? 'before' : 'after' ) .  ' action
                                "' . $action . '" was executed.' );
            
        }
    }

?>]]></programlisting>
</example>
